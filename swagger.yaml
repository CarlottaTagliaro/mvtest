swagger: '2.0'
info:
  version: '1.0'
  title: "mvtest"
  description: mvtest is an API to manage exams.
  license:
    name: GPLv3
    url: https://github.com/CarlottaTagliaro/mvtest/blob/master/LICENSE
host: mvtestse.herokuapp.io
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /tasks:
    x-summary: Tasks Collection
    get:
      summary: List all tasks made by the user
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
          
    post:
      description: >-
        You may create your own task using this action. 
      summary: Create a New Task
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TaskRequest'
      responses:
        201:
          description: 'OK'
          schema:
            $ref: '#/definitions/Task'
            
definitions:
  Task:
    title: Task
    type: object
    properties:
      id:
        type: number
      question:
        type: string
      choices:
        type: array
        items:
          type: string
      users:
        type: array
        items:
          $ref: '#/definitions/UserPerms'
    required:
      - id
      - question
      - choices
    example:
      application/json:
      id:  0
      question: Example question
      type: 1
      choices:
        - First Answer
        - Second Answer
        - Third Answer
        - Fourth Answer
      users:
        - email: "owner@mail.com"
          owner: true
          canWrite: true
        - email: "user@mail.com"
          owner: false
          canwrite: false
 
  User:
    title: User
    type: object
    properties:
      email:
        type: string
      name:
        type: string
        
  UserPerms:
    title: User Perms
    type: object
    properties:
      email:
        type: string
      owner:
        type: boolean
      canWrite:
        type: boolean
  
  TaskRequest:
    title: Task Request
    type: object
    properties:
      question:
        type: string
      choices:
        type: array
        items:
          type: string
    required:
      - question
      - choices
    example:
      question: Example Question
      choices:
        - First Answer
        - Second Answer
        - Third Answer
        - Fourth Answer